# 비트연산자 공부

# 비트 : 0과 1로 하는 연산
#
# & 비트곱
# | 비트 합
# ^ 비트 배타적 합
# ~ 비트 뒤집기
#
# >> 우측 쉬프트
# << 좌측 쉬프트

# 0010 2
# 0011 3 # & 연산을 해보면
# 0010 2
# # 즉, 2 & 3 = 2
# # 2 | 3 = 3 (2 or 3 은 3이다)
#
# #배타적 합 : 서로 반대될때 참이다. 같으면 거짓0
#
# 0010 2
# 0011 3
# 0001 1 # 2^3 = 1
#
# 0010 # 2를 뒤집으면
# 1101 # ~2값은 13이다.
#
# 10 << 1 # 좌측으로 1칸 이동 (2배가 된다) <-> 우측으로 1칸 이동하면 절반이 된다.
# 1010 # 이 좌측으로 한칸 이동 우측에 비어있는 부분은 0으로 채워진다:
# 10100 # 20
#
# 10 << 2 # 좌측으로 2칸 이동 (2*2배가 된다.)
# 101000 # 40

arr = [1,2,3]
n = len(arr)

for i in range(1<<n): #2^n으로 부분집합 구하는 원리와 같음
    for j in range(n): # n개를 하나씩 확인하는 for문
        if i & (1<<j):
            print(arr[j], end = ' ')


